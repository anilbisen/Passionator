workspace:
  base: /go
  path: src/github.com/okoeth/starter-golang

pipeline:
  fast-build:
    image: golang
    environment:
     - MONGODB_HOST=
    commands:
      - go version
      - cp -rf vendor/* /go/src
      - ls /go/src 
      - go build
      - go test
    when:
      branch: f-dev-*

  build:
    image: golang
    environment:
     - MONGODB_HOST=
    commands:
      - go version
      - go get goji.io
      - go get goji.io/pat
      - go get github.com/golang/mock/gomock
      - go get github.com/golang/mock/mockgen
      - go get gopkg.in/mgo.v2
      - go get gopkg.in/mgo.v2/bson
      - go build
      - go test
    when:
      branch: master

  test:
    image: golang
    environment:
     - MONGODB_HOST=mongo
    commands:
      - echo $TEST
      - go test
    secrets: [ test ]
    when:
      branch: master

  deploy:
    image: okoeth/openshift-client
    environment:
      - NAMESPACE=starter-go-test
    commands:
      - oc version
      - oc login jp1.altemista.cloud:8443 -u altemista -p altemi\$ta --insecure-skip-tls-verify
      - oc project $NAMESPACE
      - cd /go/src/github.com/okoeth/starter-golang/openshift
      - ./clean.sh $NAMESPACE starter-test
      - ./clean.sh $NAMESPACE starterdb-test
      - ./createBuildSecret.sh $NAMESPACE okoeth Tutn1xwgc
      - ./createAppdb.sh $NAMESPACE starter aws test
      - ./createApp.sh $NAMESPACE starter https://github.com/okoeth/starter-golang.git test
    when:
      branch: master

services:
  mongo:
    image: centos/mongodb-26-centos7
    environment:
     - MONGODB_USER=user
     - MONGODB_PASSWORD=password
     - MONGODB_DATABASE=starterdb
     - MONGODB_ADMIN_PASSWORD=admin_password
